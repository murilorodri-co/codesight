/// <reference types="react" />
import type { IconifyIcon, IconifyJSON } from '@iconify/types';
import type { IconifyHorizontalIconAlignment, IconifyVerticalIconAlignment, IconifyIconSize } from '@iconify/utils/lib/customisations';
import type { IconifyIconCustomisations, IconifyIconProps, IconProps } from './props';
/**
 * Export stuff from props.ts
 */
export { IconifyIconCustomisations, IconifyIconProps, IconProps };
/**
 * Export types that could be used in component
 */
export { IconifyIcon, IconifyJSON, IconifyHorizontalIconAlignment, IconifyVerticalIconAlignment, IconifyIconSize, };
/**
 * Type for exported components
 */
export declare type Component = (props: IconProps) => JSX.Element;
/**
 * Block icon
 *
 * @param props - Component properties
 */
export declare const Icon: Component;
/**
 * Inline icon (has negative verticalAlign that makes it behave like icon font)
 *
 * @param props - Component properties
 */
export declare const InlineIcon: Component;
/**
 * Add icon to storage, allowing to call it by name
 *
 * @param name
 * @param data
 */
export declare function addIcon(name: string, data: IconifyIcon): void;
/**
 * Add collection to storage, allowing to call icons by name
 *
 * @param data Icon set
 * @param prefix Optional prefix to add to icon names, true (default) if prefix from icon set should be used.
 */
export declare function addCollection(data: IconifyJSON, prefix?: string | boolean): void;
