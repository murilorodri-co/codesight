/// <reference types="react" />
import type { IconifyJSON, IconifyIcon } from '@iconify/types';
import { IconifyIconName } from '@iconify/utils/lib/icon/name';
import type { IconifyIconSize, IconifyHorizontalIconAlignment, IconifyVerticalIconAlignment } from '@iconify/utils/lib/customisations';
import { IconifyStorageFunctions } from '@iconify/core/lib/storage/functions';
import { IconifyBuilderFunctions } from '@iconify/core/lib/builder/functions';
import type { IconifyIconBuildResult } from '@iconify/utils/lib/svg/build';
import { IconifyAPIInternalStorage } from '@iconify/core/lib/api/';
import { IconifyAPIFunctions, IconifyAPIInternalFunctions } from '@iconify/core/lib/api/functions';
import { IconifyAPIModule, IconifyAPISendQuery, IconifyAPIPrepareQuery } from '@iconify/core/lib/api/modules';
import { PartialIconifyAPIConfig, IconifyAPIConfig, GetAPIConfig } from '@iconify/core/lib/api/config';
import type { IconifyIconLoaderCallback, IconifyIconLoaderAbort } from '@iconify/core/lib/interfaces/loader';
import type { IconifyBrowserCacheType, IconifyBrowserCacheFunctions } from '@iconify/core/lib/browser-storage/functions';
import type { RawIconCustomisations, IconifyIconOnLoad, IconifyIconCustomisations, IconifyIconProps, IconProps } from './props';
/**
 * Export required types
 */
export { IconifyStorageFunctions, IconifyBuilderFunctions, IconifyBrowserCacheFunctions, IconifyAPIFunctions, IconifyAPIInternalFunctions, };
export { IconifyIcon, IconifyJSON, IconifyIconName };
export { IconifyIconCustomisations, IconifyIconSize, IconifyHorizontalIconAlignment, IconifyVerticalIconAlignment, IconifyIconProps, IconProps, IconifyIconOnLoad, };
export { IconifyAPIConfig, IconifyIconLoaderCallback, IconifyIconLoaderAbort, IconifyAPIInternalStorage, IconifyAPIModule, GetAPIConfig, IconifyAPIPrepareQuery, IconifyAPISendQuery, PartialIconifyAPIConfig, };
export { RawIconCustomisations, IconifyIconBuildResult };
export { IconifyBrowserCacheType };
/**
 * Enable and disable browser cache
 */
export declare const enableCache: (storage: IconifyBrowserCacheType) => void;
export declare const disableCache: (storage: IconifyBrowserCacheType) => void;
/**
 * Check if icon exists
 */
export declare const iconExists: (name: string) => boolean;
/**
 * Get icon data
 */
export declare const getIcon: (name: string) => Required<IconifyIcon>;
/**
 * List available icons
 */
export declare const listIcons: (provider?: string, prefix?: string) => string[];
/**
 * Add one icon
 */
export declare const addIcon: (name: string, data: IconifyIcon) => boolean;
/**
 * Add icon set
 */
export declare const addCollection: (data: IconifyJSON, provider?: string) => boolean;
/**
 * Calculate icon size
 */
export declare const calculateSize: (size: string | number, ratio: number, precision?: number) => string | number;
/**
 * Replace unique ids in content
 */
export declare const replaceIDs: (body: string, prefix?: string | (() => string)) => string;
/**
 * Build SVG
 */
export declare const buildIcon: (icon: IconifyIcon, customisations: RawIconCustomisations) => IconifyIconBuildResult;
/**
 * Load icons
 */
export declare const loadIcons: (icons: (string | IconifyIconName)[], callback?: IconifyIconLoaderCallback) => IconifyIconLoaderAbort;
/**
 * Add API provider
 */
export declare const addAPIProvider: (provider: string, customConfig: Partial<IconifyAPIConfig>) => boolean;
/**
 * Export internal functions that can be used by third party implementations
 */
export declare const _api: IconifyAPIInternalFunctions;
/**
 * Type for exported components
 */
export declare type Component = (props: IconProps) => JSX.Element;
/**
 * Block icon
 *
 * @param props - Component properties
 */
export declare const Icon: Component;
/**
 * Inline icon (has negative verticalAlign that makes it behave like icon font)
 *
 * @param props - Component properties
 */
export declare const InlineIcon: Component;
